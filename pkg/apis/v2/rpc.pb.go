// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/apis/v2/rpc.proto

package v2

import (
	context "context"
	fmt "fmt"
	io "io"
	math "math"

	rpc "github.com/gogo/googleapis/google/rpc"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ValidateStreamRequest struct {
	// Types that are valid to be assigned to RequestUnion:
	//	*ValidateStreamRequest_CreateRequest
	//	*ValidateStreamRequest_CancelRequest
	//	*ValidateStreamRequest_ProxyResponse
	RequestUnion         isValidateStreamRequest_RequestUnion `protobuf_oneof:"request_union"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ValidateStreamRequest) Reset()         { *m = ValidateStreamRequest{} }
func (m *ValidateStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateStreamRequest) ProtoMessage()    {}
func (*ValidateStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{0}
}
func (m *ValidateStreamRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateStreamRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStreamRequest.Merge(m, src)
}
func (m *ValidateStreamRequest) XXX_Size() int {
	return m.Size()
}
func (m *ValidateStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStreamRequest proto.InternalMessageInfo

type isValidateStreamRequest_RequestUnion interface {
	isValidateStreamRequest_RequestUnion()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ValidateStreamRequest_CreateRequest struct {
	CreateRequest *ValidateStreamCreateRequest `protobuf:"bytes,1,opt,name=createRequest,proto3,oneof"`
}
type ValidateStreamRequest_CancelRequest struct {
	CancelRequest *ValidateStreamCancelRequest `protobuf:"bytes,2,opt,name=cancelRequest,proto3,oneof"`
}
type ValidateStreamRequest_ProxyResponse struct {
	ProxyResponse *ProxyValidateResponse `protobuf:"bytes,3,opt,name=proxyResponse,proto3,oneof"`
}

func (*ValidateStreamRequest_CreateRequest) isValidateStreamRequest_RequestUnion() {}
func (*ValidateStreamRequest_CancelRequest) isValidateStreamRequest_RequestUnion() {}
func (*ValidateStreamRequest_ProxyResponse) isValidateStreamRequest_RequestUnion() {}

func (m *ValidateStreamRequest) GetRequestUnion() isValidateStreamRequest_RequestUnion {
	if m != nil {
		return m.RequestUnion
	}
	return nil
}

func (m *ValidateStreamRequest) GetCreateRequest() *ValidateStreamCreateRequest {
	if x, ok := m.GetRequestUnion().(*ValidateStreamRequest_CreateRequest); ok {
		return x.CreateRequest
	}
	return nil
}

func (m *ValidateStreamRequest) GetCancelRequest() *ValidateStreamCancelRequest {
	if x, ok := m.GetRequestUnion().(*ValidateStreamRequest_CancelRequest); ok {
		return x.CancelRequest
	}
	return nil
}

func (m *ValidateStreamRequest) GetProxyResponse() *ProxyValidateResponse {
	if x, ok := m.GetRequestUnion().(*ValidateStreamRequest_ProxyResponse); ok {
		return x.ProxyResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ValidateStreamRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ValidateStreamRequest_OneofMarshaler, _ValidateStreamRequest_OneofUnmarshaler, _ValidateStreamRequest_OneofSizer, []interface{}{
		(*ValidateStreamRequest_CreateRequest)(nil),
		(*ValidateStreamRequest_CancelRequest)(nil),
		(*ValidateStreamRequest_ProxyResponse)(nil),
	}
}

func _ValidateStreamRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ValidateStreamRequest)
	// request_union
	switch x := m.RequestUnion.(type) {
	case *ValidateStreamRequest_CreateRequest:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateRequest); err != nil {
			return err
		}
	case *ValidateStreamRequest_CancelRequest:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelRequest); err != nil {
			return err
		}
	case *ValidateStreamRequest_ProxyResponse:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProxyResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ValidateStreamRequest.RequestUnion has unexpected type %T", x)
	}
	return nil
}

func _ValidateStreamRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ValidateStreamRequest)
	switch tag {
	case 1: // request_union.createRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValidateStreamCreateRequest)
		err := b.DecodeMessage(msg)
		m.RequestUnion = &ValidateStreamRequest_CreateRequest{msg}
		return true, err
	case 2: // request_union.cancelRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValidateStreamCancelRequest)
		err := b.DecodeMessage(msg)
		m.RequestUnion = &ValidateStreamRequest_CancelRequest{msg}
		return true, err
	case 3: // request_union.proxyResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProxyValidateResponse)
		err := b.DecodeMessage(msg)
		m.RequestUnion = &ValidateStreamRequest_ProxyResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ValidateStreamRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ValidateStreamRequest)
	// request_union
	switch x := m.RequestUnion.(type) {
	case *ValidateStreamRequest_CreateRequest:
		s := proto.Size(x.CreateRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValidateStreamRequest_CancelRequest:
		s := proto.Size(x.CancelRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValidateStreamRequest_ProxyResponse:
		s := proto.Size(x.ProxyResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ValidateStreamCreateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateStreamCreateRequest) Reset()         { *m = ValidateStreamCreateRequest{} }
func (m *ValidateStreamCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateStreamCreateRequest) ProtoMessage()    {}
func (*ValidateStreamCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{1}
}
func (m *ValidateStreamCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateStreamCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateStreamCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateStreamCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStreamCreateRequest.Merge(m, src)
}
func (m *ValidateStreamCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *ValidateStreamCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStreamCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStreamCreateRequest proto.InternalMessageInfo

type ValidateStreamCancelRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateStreamCancelRequest) Reset()         { *m = ValidateStreamCancelRequest{} }
func (m *ValidateStreamCancelRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateStreamCancelRequest) ProtoMessage()    {}
func (*ValidateStreamCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{2}
}
func (m *ValidateStreamCancelRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateStreamCancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateStreamCancelRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateStreamCancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStreamCancelRequest.Merge(m, src)
}
func (m *ValidateStreamCancelRequest) XXX_Size() int {
	return m.Size()
}
func (m *ValidateStreamCancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStreamCancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStreamCancelRequest proto.InternalMessageInfo

type ProxyValidateResponse struct {
	Proxy                *Proxy   `protobuf:"bytes,1,opt,name=proxy,proto3" json:"proxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyValidateResponse) Reset()         { *m = ProxyValidateResponse{} }
func (m *ProxyValidateResponse) String() string { return proto.CompactTextString(m) }
func (*ProxyValidateResponse) ProtoMessage()    {}
func (*ProxyValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{3}
}
func (m *ProxyValidateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyValidateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyValidateResponse.Merge(m, src)
}
func (m *ProxyValidateResponse) XXX_Size() int {
	return m.Size()
}
func (m *ProxyValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyValidateResponse proto.InternalMessageInfo

type ValidateStreamResponse struct {
	StreamID int64 `protobuf:"varint,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	// Types that are valid to be assigned to ResponseUnion:
	//	*ValidateStreamResponse_CreateResponse
	//	*ValidateStreamResponse_CancelResponse
	//	*ValidateStreamResponse_ProxyRequest
	ResponseUnion        isValidateStreamResponse_ResponseUnion `protobuf_oneof:"response_union"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ValidateStreamResponse) Reset()         { *m = ValidateStreamResponse{} }
func (m *ValidateStreamResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateStreamResponse) ProtoMessage()    {}
func (*ValidateStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{4}
}
func (m *ValidateStreamResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateStreamResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStreamResponse.Merge(m, src)
}
func (m *ValidateStreamResponse) XXX_Size() int {
	return m.Size()
}
func (m *ValidateStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStreamResponse proto.InternalMessageInfo

type isValidateStreamResponse_ResponseUnion interface {
	isValidateStreamResponse_ResponseUnion()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ValidateStreamResponse_CreateResponse struct {
	CreateResponse *ValidateStreamCreateResponse `protobuf:"bytes,2,opt,name=createResponse,proto3,oneof"`
}
type ValidateStreamResponse_CancelResponse struct {
	CancelResponse *ValidateStreamCancelResponse `protobuf:"bytes,3,opt,name=cancelResponse,proto3,oneof"`
}
type ValidateStreamResponse_ProxyRequest struct {
	ProxyRequest *ProxyValidateRequest `protobuf:"bytes,4,opt,name=proxyRequest,proto3,oneof"`
}

func (*ValidateStreamResponse_CreateResponse) isValidateStreamResponse_ResponseUnion() {}
func (*ValidateStreamResponse_CancelResponse) isValidateStreamResponse_ResponseUnion() {}
func (*ValidateStreamResponse_ProxyRequest) isValidateStreamResponse_ResponseUnion()   {}

func (m *ValidateStreamResponse) GetResponseUnion() isValidateStreamResponse_ResponseUnion {
	if m != nil {
		return m.ResponseUnion
	}
	return nil
}

func (m *ValidateStreamResponse) GetCreateResponse() *ValidateStreamCreateResponse {
	if x, ok := m.GetResponseUnion().(*ValidateStreamResponse_CreateResponse); ok {
		return x.CreateResponse
	}
	return nil
}

func (m *ValidateStreamResponse) GetCancelResponse() *ValidateStreamCancelResponse {
	if x, ok := m.GetResponseUnion().(*ValidateStreamResponse_CancelResponse); ok {
		return x.CancelResponse
	}
	return nil
}

func (m *ValidateStreamResponse) GetProxyRequest() *ProxyValidateRequest {
	if x, ok := m.GetResponseUnion().(*ValidateStreamResponse_ProxyRequest); ok {
		return x.ProxyRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ValidateStreamResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ValidateStreamResponse_OneofMarshaler, _ValidateStreamResponse_OneofUnmarshaler, _ValidateStreamResponse_OneofSizer, []interface{}{
		(*ValidateStreamResponse_CreateResponse)(nil),
		(*ValidateStreamResponse_CancelResponse)(nil),
		(*ValidateStreamResponse_ProxyRequest)(nil),
	}
}

func _ValidateStreamResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ValidateStreamResponse)
	// response_union
	switch x := m.ResponseUnion.(type) {
	case *ValidateStreamResponse_CreateResponse:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateResponse); err != nil {
			return err
		}
	case *ValidateStreamResponse_CancelResponse:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelResponse); err != nil {
			return err
		}
	case *ValidateStreamResponse_ProxyRequest:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProxyRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ValidateStreamResponse.ResponseUnion has unexpected type %T", x)
	}
	return nil
}

func _ValidateStreamResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ValidateStreamResponse)
	switch tag {
	case 2: // response_union.createResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValidateStreamCreateResponse)
		err := b.DecodeMessage(msg)
		m.ResponseUnion = &ValidateStreamResponse_CreateResponse{msg}
		return true, err
	case 3: // response_union.cancelResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValidateStreamCancelResponse)
		err := b.DecodeMessage(msg)
		m.ResponseUnion = &ValidateStreamResponse_CancelResponse{msg}
		return true, err
	case 4: // response_union.proxyRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProxyValidateRequest)
		err := b.DecodeMessage(msg)
		m.ResponseUnion = &ValidateStreamResponse_ProxyRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ValidateStreamResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ValidateStreamResponse)
	// response_union
	switch x := m.ResponseUnion.(type) {
	case *ValidateStreamResponse_CreateResponse:
		s := proto.Size(x.CreateResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValidateStreamResponse_CancelResponse:
		s := proto.Size(x.CancelResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ValidateStreamResponse_ProxyRequest:
		s := proto.Size(x.ProxyRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ValidateStreamCreateResponse struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Created              bool        `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Status               *rpc.Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ValidateStreamCreateResponse) Reset()         { *m = ValidateStreamCreateResponse{} }
func (m *ValidateStreamCreateResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateStreamCreateResponse) ProtoMessage()    {}
func (*ValidateStreamCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{5}
}
func (m *ValidateStreamCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateStreamCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateStreamCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateStreamCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStreamCreateResponse.Merge(m, src)
}
func (m *ValidateStreamCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *ValidateStreamCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStreamCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStreamCreateResponse proto.InternalMessageInfo

type ValidateStreamCancelResponse struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Canceled             bool        `protobuf:"varint,2,opt,name=canceled,proto3" json:"canceled,omitempty"`
	Status               *rpc.Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ValidateStreamCancelResponse) Reset()         { *m = ValidateStreamCancelResponse{} }
func (m *ValidateStreamCancelResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateStreamCancelResponse) ProtoMessage()    {}
func (*ValidateStreamCancelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{6}
}
func (m *ValidateStreamCancelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidateStreamCancelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidateStreamCancelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidateStreamCancelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateStreamCancelResponse.Merge(m, src)
}
func (m *ValidateStreamCancelResponse) XXX_Size() int {
	return m.Size()
}
func (m *ValidateStreamCancelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateStreamCancelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateStreamCancelResponse proto.InternalMessageInfo

type ProxyValidateRequest struct {
	Validator            string   `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	ProxyAddr            string   `protobuf:"bytes,2,opt,name=proxyAddr,proto3" json:"proxyAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyValidateRequest) Reset()         { *m = ProxyValidateRequest{} }
func (m *ProxyValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ProxyValidateRequest) ProtoMessage()    {}
func (*ProxyValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{7}
}
func (m *ProxyValidateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProxyValidateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProxyValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyValidateRequest.Merge(m, src)
}
func (m *ProxyValidateRequest) XXX_Size() int {
	return m.Size()
}
func (m *ProxyValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyValidateRequest proto.InternalMessageInfo

type GetProxyRequest struct {
	Validator            string   `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProxyRequest) Reset()         { *m = GetProxyRequest{} }
func (m *GetProxyRequest) String() string { return proto.CompactTextString(m) }
func (*GetProxyRequest) ProtoMessage()    {}
func (*GetProxyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{8}
}
func (m *GetProxyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProxyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProxyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProxyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProxyRequest.Merge(m, src)
}
func (m *GetProxyRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProxyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProxyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProxyRequest proto.InternalMessageInfo

type DeleteProxyRequest struct {
	Proxy                *Proxy   `protobuf:"bytes,1,opt,name=proxy,proto3" json:"proxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProxyRequest) Reset()         { *m = DeleteProxyRequest{} }
func (m *DeleteProxyRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProxyRequest) ProtoMessage()    {}
func (*DeleteProxyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49d2c44c8b623f2c, []int{9}
}
func (m *DeleteProxyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteProxyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteProxyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteProxyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProxyRequest.Merge(m, src)
}
func (m *DeleteProxyRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteProxyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProxyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProxyRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ValidateStreamRequest)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ValidateStreamRequest")
	proto.RegisterType((*ValidateStreamCreateRequest)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ValidateStreamCreateRequest")
	proto.RegisterType((*ValidateStreamCancelRequest)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ValidateStreamCancelRequest")
	proto.RegisterType((*ProxyValidateResponse)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ProxyValidateResponse")
	proto.RegisterType((*ValidateStreamResponse)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ValidateStreamResponse")
	proto.RegisterType((*ValidateStreamCreateResponse)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ValidateStreamCreateResponse")
	proto.RegisterType((*ValidateStreamCancelResponse)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ValidateStreamCancelResponse")
	proto.RegisterType((*ProxyValidateRequest)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.ProxyValidateRequest")
	proto.RegisterType((*GetProxyRequest)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.GetProxyRequest")
	proto.RegisterType((*DeleteProxyRequest)(nil), "github.com.zoumo.proxypool.pkg.apis.v2.DeleteProxyRequest")
}

func init() { proto.RegisterFile("pkg/apis/v2/rpc.proto", fileDescriptor_49d2c44c8b623f2c) }

var fileDescriptor_49d2c44c8b623f2c = []byte{
	// 696 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xf5, 0xa4, 0xfd, 0xf2, 0xa5, 0xb7, 0xb4, 0x48, 0x23, 0xda, 0x46, 0x2e, 0x72, 0x2b, 0x0b,
	0xa1, 0x82, 0x14, 0x1b, 0x19, 0x89, 0x8a, 0x9f, 0x22, 0x91, 0x06, 0x15, 0xc4, 0xa6, 0x72, 0xa5,
	0x0a, 0xb1, 0x41, 0x4e, 0x32, 0x98, 0x28, 0xb6, 0xc7, 0xd8, 0xe3, 0x94, 0xb2, 0x42, 0x3c, 0x02,
	0x12, 0x12, 0x7b, 0x5e, 0x84, 0x65, 0x97, 0x7d, 0x83, 0xd2, 0x74, 0xc7, 0x8e, 0x37, 0x40, 0x9e,
	0x19, 0xbb, 0x76, 0x5a, 0x45, 0x69, 0xcb, 0xce, 0x33, 0x77, 0xee, 0x39, 0xc7, 0xe7, 0x9e, 0x8c,
	0x03, 0x0b, 0x61, 0xdf, 0x35, 0x9d, 0xb0, 0x17, 0x9b, 0x03, 0xcb, 0x8c, 0xc2, 0x8e, 0x11, 0x46,
	0x94, 0x51, 0x7c, 0xdb, 0xed, 0xb1, 0xf7, 0x49, 0xdb, 0xe8, 0x50, 0xdf, 0xf8, 0x44, 0x13, 0x9f,
	0xa6, 0xfb, 0x1f, 0xf7, 0x43, 0x4a, 0x3d, 0x23, 0xec, 0xbb, 0x46, 0xda, 0x61, 0x0c, 0x2c, 0xb5,
	0x71, 0x7a, 0xce, 0x74, 0xa9, 0x4b, 0x4d, 0xde, 0xde, 0x4e, 0xde, 0xf1, 0x15, 0x5f, 0xf0, 0x27,
	0x01, 0xab, 0x3e, 0x28, 0x1c, 0xf7, 0xf7, 0x7a, 0xac, 0x4f, 0xf7, 0x4c, 0x97, 0x36, 0x78, 0xb1,
	0x31, 0x70, 0xbc, 0x5e, 0xd7, 0x61, 0x34, 0x8a, 0xcd, 0xfc, 0x51, 0xf6, 0x2d, 0x15, 0x55, 0xb2,
	0xfd, 0x90, 0xc4, 0x59, 0xc1, 0xa5, 0xd4, 0xf5, 0x48, 0xaa, 0xdc, 0x8c, 0x99, 0xc3, 0x92, 0xac,
	0xb0, 0x2c, 0x0b, 0xb9, 0x1e, 0xe2, 0x87, 0x6c, 0x5f, 0x14, 0xf5, 0x3f, 0x15, 0x58, 0xd8, 0x15,
	0x14, 0x64, 0x87, 0x45, 0xc4, 0xf1, 0x6d, 0xf2, 0x21, 0x21, 0x31, 0xc3, 0x7d, 0x98, 0xeb, 0x44,
	0xc4, 0x61, 0x44, 0x6e, 0xd4, 0xd1, 0x2a, 0x5a, 0x9b, 0xb5, 0x36, 0x8d, 0xc9, 0xfc, 0x30, 0xca,
	0xa8, 0x9b, 0x45, 0xa8, 0x17, 0x8a, 0x5d, 0xc6, 0xe6, 0x64, 0x4e, 0xd0, 0x21, 0x5e, 0x46, 0x56,
	0xb9, 0x12, 0x59, 0x11, 0x8a, 0x93, 0x15, 0x37, 0x30, 0x81, 0x39, 0x8e, 0x62, 0x93, 0x38, 0xa4,
	0x41, 0x4c, 0xea, 0x53, 0x9c, 0x6c, 0x63, 0x52, 0xb2, 0xed, 0x74, 0x37, 0x63, 0xcc, 0x40, 0x52,
	0x9a, 0x12, 0x6a, 0x73, 0x09, 0xe6, 0x22, 0xc1, 0xf8, 0x36, 0x09, 0x7a, 0x34, 0xc0, 0xd5, 0xdf,
	0x47, 0x2b, 0x95, 0x1a, 0xd2, 0x1f, 0xc2, 0xf2, 0x18, 0x73, 0xb0, 0x0a, 0xd3, 0x81, 0xe3, 0x13,
	0xee, 0xf7, 0x4c, 0xb3, 0x3a, 0x3c, 0x5a, 0xa9, 0xbc, 0x46, 0x36, 0xdf, 0x3b, 0xa7, 0xb5, 0xf4,
	0x66, 0xe3, 0x5a, 0xbb, 0xb0, 0x70, 0xae, 0x70, 0xfc, 0x0a, 0xfe, 0xe3, 0xc2, 0xe5, 0x80, 0x1b,
	0x17, 0xb2, 0x41, 0x90, 0xac, 0x22, 0x5b, 0x60, 0xe8, 0x5f, 0xa7, 0x60, 0x71, 0x34, 0x4f, 0x92,
	0x47, 0x85, 0x5a, 0xcc, 0x77, 0x5e, 0xb6, 0x38, 0xd5, 0x94, 0x9d, 0xaf, 0x71, 0x00, 0xf3, 0x59,
	0x20, 0xe4, 0x4c, 0x44, 0x00, 0x5a, 0x57, 0x4b, 0x5b, 0x3e, 0x9a, 0x11, 0x74, 0xce, 0x27, 0x9d,
	0x2b, 0x65, 0xa0, 0x75, 0xb5, 0xc0, 0x15, 0xf8, 0x4a, 0x3b, 0xb8, 0x0d, 0xd7, 0x64, 0x38, 0x44,
	0xbc, 0xa7, 0x39, 0xdb, 0x93, 0x4b, 0x26, 0x2e, 0xcb, 0x75, 0x09, 0xb3, 0x59, 0x87, 0xf9, 0x48,
	0xf2, 0x8d, 0x04, 0xee, 0x33, 0x82, 0x9b, 0xe3, 0x0c, 0x1a, 0x97, 0x1b, 0x5c, 0x87, 0xff, 0x85,
	0x79, 0x5d, 0x3e, 0x93, 0x9a, 0x9d, 0x2d, 0xf1, 0x5d, 0xa8, 0x8a, 0x8b, 0x46, 0x9a, 0x87, 0x0d,
	0x71, 0xd3, 0x18, 0xe9, 0xe5, 0xb9, 0xc3, 0x2b, 0xb6, 0x3c, 0xa1, 0x7f, 0x39, 0x2b, 0xa1, 0xec,
	0xd0, 0x38, 0x09, 0x2a, 0xd4, 0x84, 0x9f, 0xb9, 0x86, 0x7c, 0x7d, 0x21, 0x11, 0x6d, 0xb8, 0x71,
	0x9e, 0x93, 0xf8, 0x16, 0xcc, 0xe4, 0xd7, 0xec, 0x88, 0x80, 0xd3, 0x42, 0x7a, 0x8a, 0xfb, 0xfd,
	0xac, 0xdb, 0x8d, 0xb8, 0x8c, 0xc2, 0xa9, 0xbc, 0xa0, 0xaf, 0xc3, 0xf5, 0x2d, 0xc2, 0xb6, 0x0b,
	0x83, 0x99, 0x0c, 0x5e, 0x77, 0x00, 0xb7, 0x88, 0x47, 0x18, 0x29, 0xf5, 0xfe, 0xcb, 0x1f, 0xa7,
	0xf5, 0x03, 0xc1, 0xcc, 0x6e, 0xfe, 0x3e, 0xdf, 0x10, 0xcc, 0x97, 0x47, 0x82, 0x37, 0x2e, 0x17,
	0x7f, 0x29, 0x56, 0x7d, 0x7a, 0xd9, 0x76, 0x91, 0x01, 0x5d, 0x59, 0x43, 0xf7, 0x90, 0x75, 0x8c,
	0x60, 0x7a, 0x9b, 0x52, 0x0f, 0x33, 0xa8, 0x65, 0x56, 0xe2, 0xf5, 0x49, 0xa1, 0x47, 0xcc, 0x57,
	0x2f, 0xe6, 0x98, 0xae, 0xe0, 0x0e, 0xcc, 0x16, 0xe6, 0x80, 0x1f, 0x4d, 0xda, 0x7f, 0x76, 0x78,
	0xea, 0x62, 0x96, 0xc5, 0xec, 0xd3, 0x6b, 0x3c, 0x4f, 0x3f, 0xbd, 0xba, 0xd2, 0xdc, 0x3a, 0x38,
	0xd6, 0x94, 0xc3, 0x63, 0x4d, 0x39, 0x18, 0x6a, 0xe8, 0x70, 0xa8, 0xa1, 0x5f, 0x43, 0x0d, 0x7d,
	0x3f, 0xd1, 0x94, 0x9f, 0x27, 0x1a, 0x7a, 0x73, 0xa7, 0xf0, 0xdf, 0x80, 0x53, 0x9a, 0x39, 0xa5,
	0x59, 0xf8, 0xfc, 0x3f, 0x1e, 0x58, 0xed, 0x2a, 0x87, 0xbe, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff,
	0x4b, 0x32, 0x36, 0xbf, 0xbd, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ValidatorClient is the client API for Validator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ValidatorClient interface {
	ValidateStream(ctx context.Context, opts ...grpc.CallOption) (Validator_ValidateStreamClient, error)
}

type validatorClient struct {
	cc *grpc.ClientConn
}

func NewValidatorClient(cc *grpc.ClientConn) ValidatorClient {
	return &validatorClient{cc}
}

func (c *validatorClient) ValidateStream(ctx context.Context, opts ...grpc.CallOption) (Validator_ValidateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Validator_serviceDesc.Streams[0], "/github.com.zoumo.proxypool.pkg.apis.v2.Validator/ValidateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &validatorValidateStreamClient{stream}
	return x, nil
}

type Validator_ValidateStreamClient interface {
	Send(*ValidateStreamRequest) error
	Recv() (*ValidateStreamResponse, error)
	grpc.ClientStream
}

type validatorValidateStreamClient struct {
	grpc.ClientStream
}

func (x *validatorValidateStreamClient) Send(m *ValidateStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *validatorValidateStreamClient) Recv() (*ValidateStreamResponse, error) {
	m := new(ValidateStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ValidatorServer is the server API for Validator service.
type ValidatorServer interface {
	ValidateStream(Validator_ValidateStreamServer) error
}

func RegisterValidatorServer(s *grpc.Server, srv ValidatorServer) {
	s.RegisterService(&_Validator_serviceDesc, srv)
}

func _Validator_ValidateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValidatorServer).ValidateStream(&validatorValidateStreamServer{stream})
}

type Validator_ValidateStreamServer interface {
	Send(*ValidateStreamResponse) error
	Recv() (*ValidateStreamRequest, error)
	grpc.ServerStream
}

type validatorValidateStreamServer struct {
	grpc.ServerStream
}

func (x *validatorValidateStreamServer) Send(m *ValidateStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *validatorValidateStreamServer) Recv() (*ValidateStreamRequest, error) {
	m := new(ValidateStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Validator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.zoumo.proxypool.pkg.apis.v2.Validator",
	HandlerType: (*ValidatorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ValidateStream",
			Handler:       _Validator_ValidateStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/apis/v2/rpc.proto",
}

// PoolClient is the client API for Pool service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PoolClient interface {
	GetProxy(ctx context.Context, in *GetProxyRequest, opts ...grpc.CallOption) (*Proxy, error)
	DeleteProxy(ctx context.Context, in *DeleteProxyRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type poolClient struct {
	cc *grpc.ClientConn
}

func NewPoolClient(cc *grpc.ClientConn) PoolClient {
	return &poolClient{cc}
}

func (c *poolClient) GetProxy(ctx context.Context, in *GetProxyRequest, opts ...grpc.CallOption) (*Proxy, error) {
	out := new(Proxy)
	err := c.cc.Invoke(ctx, "/github.com.zoumo.proxypool.pkg.apis.v2.Pool/GetProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) DeleteProxy(ctx context.Context, in *DeleteProxyRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/github.com.zoumo.proxypool.pkg.apis.v2.Pool/DeleteProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PoolServer is the server API for Pool service.
type PoolServer interface {
	GetProxy(context.Context, *GetProxyRequest) (*Proxy, error)
	DeleteProxy(context.Context, *DeleteProxyRequest) (*types.Empty, error)
}

func RegisterPoolServer(s *grpc.Server, srv PoolServer) {
	s.RegisterService(&_Pool_serviceDesc, srv)
}

func _Pool_GetProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).GetProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.zoumo.proxypool.pkg.apis.v2.Pool/GetProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).GetProxy(ctx, req.(*GetProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_DeleteProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProxyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).DeleteProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.zoumo.proxypool.pkg.apis.v2.Pool/DeleteProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).DeleteProxy(ctx, req.(*DeleteProxyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pool_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.zoumo.proxypool.pkg.apis.v2.Pool",
	HandlerType: (*PoolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProxy",
			Handler:    _Pool_GetProxy_Handler,
		},
		{
			MethodName: "DeleteProxy",
			Handler:    _Pool_DeleteProxy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/apis/v2/rpc.proto",
}

func (m *ValidateStreamRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateStreamRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RequestUnion != nil {
		nn1, err := m.RequestUnion.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ValidateStreamRequest_CreateRequest) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CreateRequest != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.CreateRequest.Size()))
		n2, err := m.CreateRequest.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}
func (m *ValidateStreamRequest_CancelRequest) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CancelRequest != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.CancelRequest.Size()))
		n3, err := m.CancelRequest.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}
func (m *ValidateStreamRequest_ProxyResponse) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ProxyResponse != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.ProxyResponse.Size()))
		n4, err := m.ProxyResponse.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}
func (m *ValidateStreamCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateStreamCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ValidateStreamCancelRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateStreamCancelRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProxyValidateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyValidateResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Proxy != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.Proxy.Size()))
		n5, err := m.Proxy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ValidateStreamResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateStreamResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.StreamID != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.StreamID))
	}
	if m.ResponseUnion != nil {
		nn6, err := m.ResponseUnion.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn6
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ValidateStreamResponse_CreateResponse) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CreateResponse != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.CreateResponse.Size()))
		n7, err := m.CreateResponse.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *ValidateStreamResponse_CancelResponse) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CancelResponse != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.CancelResponse.Size()))
		n8, err := m.CancelResponse.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *ValidateStreamResponse_ProxyRequest) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ProxyRequest != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.ProxyRequest.Size()))
		n9, err := m.ProxyRequest.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *ValidateStreamCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateStreamCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Created {
		dAtA[i] = 0x10
		i++
		if m.Created {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Status != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.Status.Size()))
		n10, err := m.Status.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ValidateStreamCancelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidateStreamCancelResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Canceled {
		dAtA[i] = 0x10
		i++
		if m.Canceled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Status != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.Status.Size()))
		n11, err := m.Status.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProxyValidateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyValidateRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Validator) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(len(m.Validator)))
		i += copy(dAtA[i:], m.Validator)
	}
	if len(m.ProxyAddr) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintRpc(dAtA, i, uint64(len(m.ProxyAddr)))
		i += copy(dAtA[i:], m.ProxyAddr)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetProxyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProxyRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Validator) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(len(m.Validator)))
		i += copy(dAtA[i:], m.Validator)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteProxyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteProxyRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Proxy != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRpc(dAtA, i, uint64(m.Proxy.Size()))
		n12, err := m.Proxy.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintRpc(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ValidateStreamRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestUnion != nil {
		n += m.RequestUnion.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidateStreamRequest_CreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreateRequest != nil {
		l = m.CreateRequest.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	return n
}
func (m *ValidateStreamRequest_CancelRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CancelRequest != nil {
		l = m.CancelRequest.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	return n
}
func (m *ValidateStreamRequest_ProxyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProxyResponse != nil {
		l = m.ProxyResponse.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	return n
}
func (m *ValidateStreamCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidateStreamCancelRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyValidateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Proxy != nil {
		l = m.Proxy.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidateStreamResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StreamID != 0 {
		n += 1 + sovRpc(uint64(m.StreamID))
	}
	if m.ResponseUnion != nil {
		n += m.ResponseUnion.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidateStreamResponse_CreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreateResponse != nil {
		l = m.CreateResponse.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	return n
}
func (m *ValidateStreamResponse_CancelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CancelResponse != nil {
		l = m.CancelResponse.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	return n
}
func (m *ValidateStreamResponse_ProxyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProxyRequest != nil {
		l = m.ProxyRequest.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	return n
}
func (m *ValidateStreamCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.Created {
		n += 2
	}
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ValidateStreamCancelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.Canceled {
		n += 2
	}
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProxyValidateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Validator)
	if l > 0 {
		n += 1 + l + sovRpc(uint64(l))
	}
	l = len(m.ProxyAddr)
	if l > 0 {
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProxyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Validator)
	if l > 0 {
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteProxyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Proxy != nil {
		l = m.Proxy.Size()
		n += 1 + l + sovRpc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRpc(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozRpc(x uint64) (n int) {
	return sovRpc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ValidateStreamRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateStreamRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateStreamRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ValidateStreamCreateRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RequestUnion = &ValidateStreamRequest_CreateRequest{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ValidateStreamCancelRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RequestUnion = &ValidateStreamRequest_CancelRequest{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ProxyValidateResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RequestUnion = &ValidateStreamRequest_ProxyResponse{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateStreamCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateStreamCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateStreamCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateStreamCancelRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateStreamCancelRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateStreamCancelRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyValidateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyValidateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyValidateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proxy == nil {
				m.Proxy = &Proxy{}
			}
			if err := m.Proxy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateStreamResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateStreamResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateStreamResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StreamID", wireType)
			}
			m.StreamID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StreamID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ValidateStreamCreateResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ResponseUnion = &ValidateStreamResponse_CreateResponse{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelResponse", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ValidateStreamCancelResponse{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ResponseUnion = &ValidateStreamResponse_CancelResponse{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ProxyValidateRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ResponseUnion = &ValidateStreamResponse_ProxyRequest{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateStreamCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateStreamCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateStreamCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Created = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &rpc.Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ValidateStreamCancelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidateStreamCancelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidateStreamCancelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Canceled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Canceled = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &rpc.Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyValidateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyValidateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyValidateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Validator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProxyAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProxyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProxyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProxyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Validator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteProxyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteProxyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteProxyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proxy == nil {
				m.Proxy = &Proxy{}
			}
			if err := m.Proxy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRpc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRpc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRpc
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthRpc
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowRpc
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipRpc(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthRpc
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthRpc = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRpc   = fmt.Errorf("proto: integer overflow")
)
